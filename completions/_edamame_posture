#compdef edamame_posture

autoload -U is-at-least

_edamame_posture() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_edamame_posture_commands" \
"*::: :->edamame_posture" \
&& ret=0
    case $state in
    (edamame_posture)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:edamame_posture-command-$line[1]:"
        case $line[1] in
            (completion)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
':SHELL -- The shell to generate completions for:(bash elvish fish powershell zsh)' \
&& ret=0
;;
(get-score)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(lanscan)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(capture)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
'::SECONDS -- Number of seconds to capture:_default' \
'::WHITELIST_NAME -- Whitelist name:_default' \
'::ZEEK_FORMAT -- Zeek format:(true false)' \
'::LOCAL_TRAFFIC -- Include local traffic:(true false)' \
&& ret=0
;;
(get-core-info)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(get-device-info)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(get-system-info)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(request-pin)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
':USER -- User name:_default' \
':DOMAIN -- Domain name:_default' \
&& ret=0
;;
(get-core-version)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(remediate-all-threats)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
'::REMEDIATIONS -- Remediations to skip (comma separated list), by default '\''remote login enabled'\'' and '\''local firewall disabled'\'' are skipped in order to avoid lockdown issues:_default' \
&& ret=0
;;
(remediate-all-threats-force)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(remediate-threat)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
':THREAT_ID -- Threat ID:_default' \
&& ret=0
;;
(rollback-threat)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
':THREAT_ID -- Threat ID:_default' \
&& ret=0
;;
(list-threats)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(get-threat-info)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
':THREAT_ID -- Threat ID:_default' \
&& ret=0
;;
(request-signature)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(request-report)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
':EMAIL -- Email address:_default' \
':SIGNATURE -- SignaturCe:_default' \
&& ret=0
;;
(check-policy-for-domain)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
':DOMAIN -- Domain name:_default' \
':POLICY_NAME -- Policy name:_default' \
&& ret=0
;;
(check-policy-for-domain-with-signature)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
':SIGNATURE -- Signature:_default' \
':DOMAIN -- Domain name:_default' \
':POLICY_NAME -- Policy name:_default' \
&& ret=0
;;
(check-policy)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
':MINIMUM_SCORE -- Minimum required score (value between 0.0 and 5.0):_default' \
':THREAT_IDS -- Comma separated list of threat IDs that must be fixed:_default' \
'::TAG_PREFIXES -- Comma separated list of tag prefixes:_default' \
&& ret=0
;;
(get-tag-prefixes)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(background-logs)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(background-wait-for-connection)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
'::TIMEOUT -- Timeout in seconds:_default' \
&& ret=0
;;
(background-get-sessions)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
'::ZEEK_FORMAT -- Zeek format:(true false)' \
'::LOCAL_TRAFFIC -- Include local traffic:(true false)' \
'::CHECK_ANOMALOUS -- Exit with code 1 if anomalous sessions are detected:(true false)' \
&& ret=0
;;
(background-get-exceptions)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
'::ZEEK_FORMAT -- Zeek format:(true false)' \
'::LOCAL_TRAFFIC -- Include local traffic:(true false)' \
&& ret=0
;;
(background-threats-info)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(foreground-start)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
':USER -- User name:_default' \
':DOMAIN -- Domain name:_default' \
':PIN -- PIN:_default' \
&& ret=0
;;
(background-start)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
':USER -- User name:_default' \
':DOMAIN -- Domain name:_default' \
':PIN -- PIN:_default' \
'::DEVICE_ID -- Device ID in the form of a string, this will be used as a suffix to the detected hardware ID. When non empty, the endpoint will be flagged as a CI/CD runner.:_default' \
'::LAN_SCANNING -- LAN scanning enabled:(true false)' \
'::WHITELIST_NAME -- Whitelist name:_default' \
'::LOCAL_TRAFFIC -- Include local traffic:(true false)' \
&& ret=0
;;
(background-stop)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(background-status)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(background-last-report-signature)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(background-get-history)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(background-start-disconnected)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
'::LAN_SCANNING -- LAN scanning enabled:(true false)' \
'::WHITELIST_NAME -- Whitelist name:_default' \
'::LOCAL_TRAFFIC -- Include local traffic:(true false)' \
&& ret=0
;;
(background-set-custom-whitelists)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
':WHITELIST_JSON -- JSON string containing whitelist definitions:_default' \
&& ret=0
;;
(background-create-custom-whitelists)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(background-create-and-set-custom-whitelists)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(background-set-custom-blacklists)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
':BLACKLIST_JSON -- JSON string containing blacklist definitions:_default' \
&& ret=0
;;
(background-score)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(background-get-anomalous-sessions)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
'::ZEEK_FORMAT -- Zeek format:(true false)' \
&& ret=0
;;
(background-get-blacklisted-sessions)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
'::ZEEK_FORMAT -- Zeek format:(true false)' \
&& ret=0
;;
(background-get-blacklists)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(background-get-whitelists)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(background-get-whitelist-name)
_arguments "${_arguments_options[@]}" : \
'*-v[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'*--verbose[Verbosity level (-v\: info, -vv\: debug, -vvv\: trace)]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_edamame_posture__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:edamame_posture-help-command-$line[1]:"
        case $line[1] in
            (completion)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(get-score)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(lanscan)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(capture)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(get-core-info)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(get-device-info)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(get-system-info)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(request-pin)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(get-core-version)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(remediate-all-threats)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(remediate-all-threats-force)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(remediate-threat)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(rollback-threat)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(list-threats)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(get-threat-info)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(request-signature)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(request-report)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(check-policy-for-domain)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(check-policy-for-domain-with-signature)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(check-policy)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(get-tag-prefixes)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(background-logs)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(background-wait-for-connection)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(background-get-sessions)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(background-get-exceptions)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(background-threats-info)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(foreground-start)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(background-start)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(background-stop)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(background-status)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(background-last-report-signature)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(background-get-history)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(background-start-disconnected)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(background-set-custom-whitelists)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(background-create-custom-whitelists)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(background-create-and-set-custom-whitelists)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(background-set-custom-blacklists)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(background-score)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(background-get-anomalous-sessions)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(background-get-blacklisted-sessions)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(background-get-blacklists)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(background-get-whitelists)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(background-get-whitelist-name)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_edamame_posture_commands] )) ||
_edamame_posture_commands() {
    local commands; commands=(
'completion:Generate shell completion scripts' \
'get-score:Get score information' \
'lanscan:Performs a LAN scan' \
'capture:Capture packets' \
'get-core-info:Get core information' \
'get-device-info:Get device information' \
'get-system-info:Get system information' \
'request-pin:Request PIN' \
'get-core-version:Get core version' \
'remediate-all-threats:Remediate all threats but excluding remote login enabled and local firewall disabled as well as other threats specified in the comma separated list' \
'remediate-all-threats-force:Remediate all threats, including threats that could lock you out of the system, use with caution!' \
'remediate-threat:Remediate a threat' \
'rollback-threat:Rollback a threat' \
'list-threats:List all threat names' \
'get-threat-info:Get threat information' \
'request-signature:Report the security posture anonymously and get a signature for later retrieval' \
'request-report:Send a report from a signature to an email address' \
'check-policy-for-domain:Check the current score against a policy for a specific domain in the hub' \
'check-policy-for-domain-with-signature:A score associated with a signature, against of policy for a specific domain in the hub' \
'check-policy:Check locally if the current system meets the specified policy requirements' \
'get-tag-prefixes:Get threat model tag prefixes' \
'background-logs:Display logs from the background process' \
'background-wait-for-connection:Wait for connection of the background process' \
'background-get-sessions:Get connections from the background process' \
'background-get-exceptions:Get non-conforming connections from the background process' \
'background-threats-info:Get threats information of the background process' \
'foreground-start:Start reporting in the foreground (used by the systemd service)' \
'background-start:Start reporting background process' \
'background-stop:Stop reporting background process' \
'background-status:Get status of reporting background process' \
'background-last-report-signature:Get last report signature of background process' \
'background-get-history:Get history of score modifications' \
'background-start-disconnected:Start the background process in disconnected mode (without domain authentication)' \
'background-set-custom-whitelists:Set custom whitelists from JSON' \
'background-create-custom-whitelists:Create custom whitelists from current sessions' \
'background-create-and-set-custom-whitelists:Create custom whitelists from current sessions and set them' \
'background-set-custom-blacklists:Set custom blacklists from JSON' \
'background-score:Get security score from the background process' \
'background-get-anomalous-sessions:Get anomalous connections detected by the background process' \
'background-get-blacklisted-sessions:Get blacklisted connections detected by the background process' \
'background-get-blacklists:Get blacklists from the background process' \
'background-get-whitelists:Get whitelists from the background process' \
'background-get-whitelist-name:Get the current whitelist name from the background process' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'edamame_posture commands' commands "$@"
}
(( $+functions[_edamame_posture__background-create-and-set-custom-whitelists_commands] )) ||
_edamame_posture__background-create-and-set-custom-whitelists_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture background-create-and-set-custom-whitelists commands' commands "$@"
}
(( $+functions[_edamame_posture__background-create-custom-whitelists_commands] )) ||
_edamame_posture__background-create-custom-whitelists_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture background-create-custom-whitelists commands' commands "$@"
}
(( $+functions[_edamame_posture__background-get-anomalous-sessions_commands] )) ||
_edamame_posture__background-get-anomalous-sessions_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture background-get-anomalous-sessions commands' commands "$@"
}
(( $+functions[_edamame_posture__background-get-blacklisted-sessions_commands] )) ||
_edamame_posture__background-get-blacklisted-sessions_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture background-get-blacklisted-sessions commands' commands "$@"
}
(( $+functions[_edamame_posture__background-get-blacklists_commands] )) ||
_edamame_posture__background-get-blacklists_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture background-get-blacklists commands' commands "$@"
}
(( $+functions[_edamame_posture__background-get-exceptions_commands] )) ||
_edamame_posture__background-get-exceptions_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture background-get-exceptions commands' commands "$@"
}
(( $+functions[_edamame_posture__background-get-history_commands] )) ||
_edamame_posture__background-get-history_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture background-get-history commands' commands "$@"
}
(( $+functions[_edamame_posture__background-get-sessions_commands] )) ||
_edamame_posture__background-get-sessions_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture background-get-sessions commands' commands "$@"
}
(( $+functions[_edamame_posture__background-get-whitelist-name_commands] )) ||
_edamame_posture__background-get-whitelist-name_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture background-get-whitelist-name commands' commands "$@"
}
(( $+functions[_edamame_posture__background-get-whitelists_commands] )) ||
_edamame_posture__background-get-whitelists_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture background-get-whitelists commands' commands "$@"
}
(( $+functions[_edamame_posture__background-last-report-signature_commands] )) ||
_edamame_posture__background-last-report-signature_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture background-last-report-signature commands' commands "$@"
}
(( $+functions[_edamame_posture__background-logs_commands] )) ||
_edamame_posture__background-logs_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture background-logs commands' commands "$@"
}
(( $+functions[_edamame_posture__background-score_commands] )) ||
_edamame_posture__background-score_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture background-score commands' commands "$@"
}
(( $+functions[_edamame_posture__background-set-custom-blacklists_commands] )) ||
_edamame_posture__background-set-custom-blacklists_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture background-set-custom-blacklists commands' commands "$@"
}
(( $+functions[_edamame_posture__background-set-custom-whitelists_commands] )) ||
_edamame_posture__background-set-custom-whitelists_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture background-set-custom-whitelists commands' commands "$@"
}
(( $+functions[_edamame_posture__background-start_commands] )) ||
_edamame_posture__background-start_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture background-start commands' commands "$@"
}
(( $+functions[_edamame_posture__background-start-disconnected_commands] )) ||
_edamame_posture__background-start-disconnected_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture background-start-disconnected commands' commands "$@"
}
(( $+functions[_edamame_posture__background-status_commands] )) ||
_edamame_posture__background-status_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture background-status commands' commands "$@"
}
(( $+functions[_edamame_posture__background-stop_commands] )) ||
_edamame_posture__background-stop_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture background-stop commands' commands "$@"
}
(( $+functions[_edamame_posture__background-threats-info_commands] )) ||
_edamame_posture__background-threats-info_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture background-threats-info commands' commands "$@"
}
(( $+functions[_edamame_posture__background-wait-for-connection_commands] )) ||
_edamame_posture__background-wait-for-connection_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture background-wait-for-connection commands' commands "$@"
}
(( $+functions[_edamame_posture__capture_commands] )) ||
_edamame_posture__capture_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture capture commands' commands "$@"
}
(( $+functions[_edamame_posture__check-policy_commands] )) ||
_edamame_posture__check-policy_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture check-policy commands' commands "$@"
}
(( $+functions[_edamame_posture__check-policy-for-domain_commands] )) ||
_edamame_posture__check-policy-for-domain_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture check-policy-for-domain commands' commands "$@"
}
(( $+functions[_edamame_posture__check-policy-for-domain-with-signature_commands] )) ||
_edamame_posture__check-policy-for-domain-with-signature_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture check-policy-for-domain-with-signature commands' commands "$@"
}
(( $+functions[_edamame_posture__completion_commands] )) ||
_edamame_posture__completion_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture completion commands' commands "$@"
}
(( $+functions[_edamame_posture__foreground-start_commands] )) ||
_edamame_posture__foreground-start_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture foreground-start commands' commands "$@"
}
(( $+functions[_edamame_posture__get-core-info_commands] )) ||
_edamame_posture__get-core-info_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture get-core-info commands' commands "$@"
}
(( $+functions[_edamame_posture__get-core-version_commands] )) ||
_edamame_posture__get-core-version_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture get-core-version commands' commands "$@"
}
(( $+functions[_edamame_posture__get-device-info_commands] )) ||
_edamame_posture__get-device-info_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture get-device-info commands' commands "$@"
}
(( $+functions[_edamame_posture__get-score_commands] )) ||
_edamame_posture__get-score_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture get-score commands' commands "$@"
}
(( $+functions[_edamame_posture__get-system-info_commands] )) ||
_edamame_posture__get-system-info_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture get-system-info commands' commands "$@"
}
(( $+functions[_edamame_posture__get-tag-prefixes_commands] )) ||
_edamame_posture__get-tag-prefixes_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture get-tag-prefixes commands' commands "$@"
}
(( $+functions[_edamame_posture__get-threat-info_commands] )) ||
_edamame_posture__get-threat-info_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture get-threat-info commands' commands "$@"
}
(( $+functions[_edamame_posture__help_commands] )) ||
_edamame_posture__help_commands() {
    local commands; commands=(
'completion:Generate shell completion scripts' \
'get-score:Get score information' \
'lanscan:Performs a LAN scan' \
'capture:Capture packets' \
'get-core-info:Get core information' \
'get-device-info:Get device information' \
'get-system-info:Get system information' \
'request-pin:Request PIN' \
'get-core-version:Get core version' \
'remediate-all-threats:Remediate all threats but excluding remote login enabled and local firewall disabled as well as other threats specified in the comma separated list' \
'remediate-all-threats-force:Remediate all threats, including threats that could lock you out of the system, use with caution!' \
'remediate-threat:Remediate a threat' \
'rollback-threat:Rollback a threat' \
'list-threats:List all threat names' \
'get-threat-info:Get threat information' \
'request-signature:Report the security posture anonymously and get a signature for later retrieval' \
'request-report:Send a report from a signature to an email address' \
'check-policy-for-domain:Check the current score against a policy for a specific domain in the hub' \
'check-policy-for-domain-with-signature:A score associated with a signature, against of policy for a specific domain in the hub' \
'check-policy:Check locally if the current system meets the specified policy requirements' \
'get-tag-prefixes:Get threat model tag prefixes' \
'background-logs:Display logs from the background process' \
'background-wait-for-connection:Wait for connection of the background process' \
'background-get-sessions:Get connections from the background process' \
'background-get-exceptions:Get non-conforming connections from the background process' \
'background-threats-info:Get threats information of the background process' \
'foreground-start:Start reporting in the foreground (used by the systemd service)' \
'background-start:Start reporting background process' \
'background-stop:Stop reporting background process' \
'background-status:Get status of reporting background process' \
'background-last-report-signature:Get last report signature of background process' \
'background-get-history:Get history of score modifications' \
'background-start-disconnected:Start the background process in disconnected mode (without domain authentication)' \
'background-set-custom-whitelists:Set custom whitelists from JSON' \
'background-create-custom-whitelists:Create custom whitelists from current sessions' \
'background-create-and-set-custom-whitelists:Create custom whitelists from current sessions and set them' \
'background-set-custom-blacklists:Set custom blacklists from JSON' \
'background-score:Get security score from the background process' \
'background-get-anomalous-sessions:Get anomalous connections detected by the background process' \
'background-get-blacklisted-sessions:Get blacklisted connections detected by the background process' \
'background-get-blacklists:Get blacklists from the background process' \
'background-get-whitelists:Get whitelists from the background process' \
'background-get-whitelist-name:Get the current whitelist name from the background process' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'edamame_posture help commands' commands "$@"
}
(( $+functions[_edamame_posture__help__background-create-and-set-custom-whitelists_commands] )) ||
_edamame_posture__help__background-create-and-set-custom-whitelists_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help background-create-and-set-custom-whitelists commands' commands "$@"
}
(( $+functions[_edamame_posture__help__background-create-custom-whitelists_commands] )) ||
_edamame_posture__help__background-create-custom-whitelists_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help background-create-custom-whitelists commands' commands "$@"
}
(( $+functions[_edamame_posture__help__background-get-anomalous-sessions_commands] )) ||
_edamame_posture__help__background-get-anomalous-sessions_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help background-get-anomalous-sessions commands' commands "$@"
}
(( $+functions[_edamame_posture__help__background-get-blacklisted-sessions_commands] )) ||
_edamame_posture__help__background-get-blacklisted-sessions_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help background-get-blacklisted-sessions commands' commands "$@"
}
(( $+functions[_edamame_posture__help__background-get-blacklists_commands] )) ||
_edamame_posture__help__background-get-blacklists_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help background-get-blacklists commands' commands "$@"
}
(( $+functions[_edamame_posture__help__background-get-exceptions_commands] )) ||
_edamame_posture__help__background-get-exceptions_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help background-get-exceptions commands' commands "$@"
}
(( $+functions[_edamame_posture__help__background-get-history_commands] )) ||
_edamame_posture__help__background-get-history_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help background-get-history commands' commands "$@"
}
(( $+functions[_edamame_posture__help__background-get-sessions_commands] )) ||
_edamame_posture__help__background-get-sessions_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help background-get-sessions commands' commands "$@"
}
(( $+functions[_edamame_posture__help__background-get-whitelist-name_commands] )) ||
_edamame_posture__help__background-get-whitelist-name_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help background-get-whitelist-name commands' commands "$@"
}
(( $+functions[_edamame_posture__help__background-get-whitelists_commands] )) ||
_edamame_posture__help__background-get-whitelists_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help background-get-whitelists commands' commands "$@"
}
(( $+functions[_edamame_posture__help__background-last-report-signature_commands] )) ||
_edamame_posture__help__background-last-report-signature_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help background-last-report-signature commands' commands "$@"
}
(( $+functions[_edamame_posture__help__background-logs_commands] )) ||
_edamame_posture__help__background-logs_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help background-logs commands' commands "$@"
}
(( $+functions[_edamame_posture__help__background-score_commands] )) ||
_edamame_posture__help__background-score_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help background-score commands' commands "$@"
}
(( $+functions[_edamame_posture__help__background-set-custom-blacklists_commands] )) ||
_edamame_posture__help__background-set-custom-blacklists_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help background-set-custom-blacklists commands' commands "$@"
}
(( $+functions[_edamame_posture__help__background-set-custom-whitelists_commands] )) ||
_edamame_posture__help__background-set-custom-whitelists_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help background-set-custom-whitelists commands' commands "$@"
}
(( $+functions[_edamame_posture__help__background-start_commands] )) ||
_edamame_posture__help__background-start_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help background-start commands' commands "$@"
}
(( $+functions[_edamame_posture__help__background-start-disconnected_commands] )) ||
_edamame_posture__help__background-start-disconnected_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help background-start-disconnected commands' commands "$@"
}
(( $+functions[_edamame_posture__help__background-status_commands] )) ||
_edamame_posture__help__background-status_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help background-status commands' commands "$@"
}
(( $+functions[_edamame_posture__help__background-stop_commands] )) ||
_edamame_posture__help__background-stop_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help background-stop commands' commands "$@"
}
(( $+functions[_edamame_posture__help__background-threats-info_commands] )) ||
_edamame_posture__help__background-threats-info_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help background-threats-info commands' commands "$@"
}
(( $+functions[_edamame_posture__help__background-wait-for-connection_commands] )) ||
_edamame_posture__help__background-wait-for-connection_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help background-wait-for-connection commands' commands "$@"
}
(( $+functions[_edamame_posture__help__capture_commands] )) ||
_edamame_posture__help__capture_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help capture commands' commands "$@"
}
(( $+functions[_edamame_posture__help__check-policy_commands] )) ||
_edamame_posture__help__check-policy_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help check-policy commands' commands "$@"
}
(( $+functions[_edamame_posture__help__check-policy-for-domain_commands] )) ||
_edamame_posture__help__check-policy-for-domain_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help check-policy-for-domain commands' commands "$@"
}
(( $+functions[_edamame_posture__help__check-policy-for-domain-with-signature_commands] )) ||
_edamame_posture__help__check-policy-for-domain-with-signature_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help check-policy-for-domain-with-signature commands' commands "$@"
}
(( $+functions[_edamame_posture__help__completion_commands] )) ||
_edamame_posture__help__completion_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help completion commands' commands "$@"
}
(( $+functions[_edamame_posture__help__foreground-start_commands] )) ||
_edamame_posture__help__foreground-start_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help foreground-start commands' commands "$@"
}
(( $+functions[_edamame_posture__help__get-core-info_commands] )) ||
_edamame_posture__help__get-core-info_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help get-core-info commands' commands "$@"
}
(( $+functions[_edamame_posture__help__get-core-version_commands] )) ||
_edamame_posture__help__get-core-version_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help get-core-version commands' commands "$@"
}
(( $+functions[_edamame_posture__help__get-device-info_commands] )) ||
_edamame_posture__help__get-device-info_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help get-device-info commands' commands "$@"
}
(( $+functions[_edamame_posture__help__get-score_commands] )) ||
_edamame_posture__help__get-score_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help get-score commands' commands "$@"
}
(( $+functions[_edamame_posture__help__get-system-info_commands] )) ||
_edamame_posture__help__get-system-info_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help get-system-info commands' commands "$@"
}
(( $+functions[_edamame_posture__help__get-tag-prefixes_commands] )) ||
_edamame_posture__help__get-tag-prefixes_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help get-tag-prefixes commands' commands "$@"
}
(( $+functions[_edamame_posture__help__get-threat-info_commands] )) ||
_edamame_posture__help__get-threat-info_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help get-threat-info commands' commands "$@"
}
(( $+functions[_edamame_posture__help__help_commands] )) ||
_edamame_posture__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help help commands' commands "$@"
}
(( $+functions[_edamame_posture__help__lanscan_commands] )) ||
_edamame_posture__help__lanscan_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help lanscan commands' commands "$@"
}
(( $+functions[_edamame_posture__help__list-threats_commands] )) ||
_edamame_posture__help__list-threats_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help list-threats commands' commands "$@"
}
(( $+functions[_edamame_posture__help__remediate-all-threats_commands] )) ||
_edamame_posture__help__remediate-all-threats_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help remediate-all-threats commands' commands "$@"
}
(( $+functions[_edamame_posture__help__remediate-all-threats-force_commands] )) ||
_edamame_posture__help__remediate-all-threats-force_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help remediate-all-threats-force commands' commands "$@"
}
(( $+functions[_edamame_posture__help__remediate-threat_commands] )) ||
_edamame_posture__help__remediate-threat_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help remediate-threat commands' commands "$@"
}
(( $+functions[_edamame_posture__help__request-pin_commands] )) ||
_edamame_posture__help__request-pin_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help request-pin commands' commands "$@"
}
(( $+functions[_edamame_posture__help__request-report_commands] )) ||
_edamame_posture__help__request-report_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help request-report commands' commands "$@"
}
(( $+functions[_edamame_posture__help__request-signature_commands] )) ||
_edamame_posture__help__request-signature_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help request-signature commands' commands "$@"
}
(( $+functions[_edamame_posture__help__rollback-threat_commands] )) ||
_edamame_posture__help__rollback-threat_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture help rollback-threat commands' commands "$@"
}
(( $+functions[_edamame_posture__lanscan_commands] )) ||
_edamame_posture__lanscan_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture lanscan commands' commands "$@"
}
(( $+functions[_edamame_posture__list-threats_commands] )) ||
_edamame_posture__list-threats_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture list-threats commands' commands "$@"
}
(( $+functions[_edamame_posture__remediate-all-threats_commands] )) ||
_edamame_posture__remediate-all-threats_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture remediate-all-threats commands' commands "$@"
}
(( $+functions[_edamame_posture__remediate-all-threats-force_commands] )) ||
_edamame_posture__remediate-all-threats-force_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture remediate-all-threats-force commands' commands "$@"
}
(( $+functions[_edamame_posture__remediate-threat_commands] )) ||
_edamame_posture__remediate-threat_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture remediate-threat commands' commands "$@"
}
(( $+functions[_edamame_posture__request-pin_commands] )) ||
_edamame_posture__request-pin_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture request-pin commands' commands "$@"
}
(( $+functions[_edamame_posture__request-report_commands] )) ||
_edamame_posture__request-report_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture request-report commands' commands "$@"
}
(( $+functions[_edamame_posture__request-signature_commands] )) ||
_edamame_posture__request-signature_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture request-signature commands' commands "$@"
}
(( $+functions[_edamame_posture__rollback-threat_commands] )) ||
_edamame_posture__rollback-threat_commands() {
    local commands; commands=()
    _describe -t commands 'edamame_posture rollback-threat commands' commands "$@"
}

if [ "$funcstack[1]" = "_edamame_posture" ]; then
    _edamame_posture "$@"
else
    compdef _edamame_posture edamame_posture
fi
