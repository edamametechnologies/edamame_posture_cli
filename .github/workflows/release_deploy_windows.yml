name: Build and publish Windows MSIX to Microsoft Store

on:
  workflow_dispatch:
  push:
    branches:
      - 'dev'
      - 'main'
    paths-ignore:
      - 'macos/**'
      - 'linux/**'
      - 'snap/**'
      - .github/workflows/release_deploy_linux.yml
      - .github/workflows/release_deploy_macos.yml

# Auto cancel previous runs if they were not completed.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# Declare default permissions as read only.
permissions: read-all

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 90

    env:
      EDAMAME_APP_SENTRY: ${{ secrets.EDAMAME_APP_SENTRY }}
      PWNED_API_KEY: ${{ secrets.PWNED_API_KEY }}
      EDAMAME_TARGET: ${{ secrets.EDAMAME_TARGET }}
      EDAMAME_CA_PEM: ${{ secrets.EDAMAME_CA_PEM }}
      EDAMAME_CLIENT_PEM: ${{ secrets.EDAMAME_CLIENT_PEM }}
      EDAMAME_CLIENT_KEY: ${{ secrets.EDAMAME_CLIENT_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      LAMBDA_SIGNATURE: ${{ secrets.LAMBDA_SIGNATURE }}

    steps:

      - name: Setup EDAMAME Posture
        uses: edamametechnologies/edamame_posture_action@v0
        with:
          edamame_user: ${{ vars.EDAMAME_POSTURE_USER }}
          edamame_domain: ${{ vars.EDAMAME_POSTURE_DOMAIN }}
          edamame_pin: ${{ secrets.EDAMAME_POSTURE_PIN }}
          edamame_id: ${{ github.run_id }}
          network_scan: true
          auto_remediate: true
          
      - name: Setup .NET 8.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Setup MS Store CLI
        uses: microsoft/setup-msstore-cli@v1

      - name: Check out Git repository
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 10
          command: actions/checkout@v4

      - name: Install additional packages w/ Chocolatey
        run: |
          choco install protoc wget
          dotnet tool install --global AzureSignTool

      - name: Configure Git Authentication to import private crates
        run: |
          git config --global user.email "dev@edamame.tech"
          git config --global user.name "EDAMAME Dev"
          git config --global url."https://edamamedev:${{ secrets.DEV_GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"

      - name: Build application
        # Main or dev
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
        shell: bash
        run: |
            make windows_publish

      - name: Signing of the Posture
        # Main or dev
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
        # We can't use bash here, as the AzureSignTool is a .NET tool
        run: AzureSignTool sign -kvt ${{ secrets.AZURE_SIGN_TENANT_ID }} -kvu ${{ secrets.AZURE_SIGN_KEY_VAULT_URI }} -kvi ${{ secrets.AZURE_SIGN_CLIENT_ID }} -kvs ${{ secrets.AZURE_SIGN_CLIENT_SECRET }} -kvc ${{ secrets.AZURE_SIGN_CERT_NAME }} -tr http://timestamp.digicert.com -v ./target/release/edamame_posture.exe

      # Dev only (upload to dev folder)
      - name: Upload posture to AWS
        if: github.ref == 'refs/heads/dev'
        shell: bash
        run: |
          VERSION=$(grep '^version =' ./Cargo.toml | awk '{print $3}' | tr -d '"')
          aws s3 cp ./target/release/edamame_posture.exe s3://edamame-posture/dev/windows/${VERSION}/edamame_posture.exe --acl public-read

      # Main only (upload to base folder)
      - name: Upload posture to AWS
        if: github.ref == 'refs/heads/main'
        shell: bash
        run: |
          VERSION=$(grep '^version =' ./Cargo.toml | awk '{print $3}' | tr -d '"')
          aws s3 cp ./target/release/edamame_posture.exe s3://edamame-posture/windows/${VERSION}/edamame_posture.exe --acl public-read
          aws s3 cp ./target/release/edamame_posture.exe s3://edamame-posture/windows/latest/edamame_posture.exe --acl public-read

      - name: Dump EDAMAME Posture sessions
        uses: edamametechnologies/edamame_posture_action@v0
        with:
          dump_sessions_log: true